import React, { useState } from "react";
import { Button, message, notification } from "antd";
import { ReloadOutlined } from "@ant-design/icons";
import { updateProducts } from "@/lib/api";

interface UpdateButtonProps {
  onUpdateSuccess?: () => void;
}

export const UpdateButton: React.FC<UpdateButtonProps> = ({
  onUpdateSuccess,
}) => {
  const [isUpdating, setIsUpdating] = useState(false);

  const handleUpdate = async () => {
    console.log("üîÑ Starting update...");
    setIsUpdating(true);
    try {
      console.log("üì° Calling updateProducts...");
      await updateProducts();
      console.log("‚úÖ Update successful, showing toast...");
      message.success("‚úÖ C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!");
      
      // Th√™m notification ƒë·ªÉ ƒë·∫£m b·∫£o user th·∫•y
      notification.success({
        message: "C·∫≠p nh·∫≠t th√†nh c√¥ng!",
        description: "Danh s√°ch s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª´ server.",
        duration: 3,
        placement: "topRight",
      });
      
      if (onUpdateSuccess) {
        onUpdateSuccess();
      }
    } catch (error) {
      console.error("‚ùå Update error:", error);
      message.error("‚ùå C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m");
      
      // Th√™m notification error
      notification.error({
        message: "C·∫≠p nh·∫≠t th·∫•t b·∫°i!",
        description: "C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.",
        duration: 4,
        placement: "topRight",
      });
    } finally {
      setIsUpdating(false);
    }
  };

  return (
    <Button
      type="primary"
      icon={<ReloadOutlined />}
      loading={isUpdating}
      onClick={handleUpdate}
      style={{
        backgroundColor: "#52c41a",
        borderColor: "#52c41a",
      }}
      onMouseEnter={(e) => {
        e.currentTarget.style.backgroundColor = "#73d13d";
        e.currentTarget.style.borderColor = "#73d13d";
      }}
      onMouseLeave={(e) => {
        e.currentTarget.style.backgroundColor = "#52c41a";
        e.currentTarget.style.borderColor = "#52c41a";
      }}
    >
      C·∫≠p nh·∫≠t
    </Button>
  );
};
